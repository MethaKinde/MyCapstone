@model MyChurch.Models.Member

@{
    ViewBag.Title = "Create";
}

<style>

    .form-wrapper {
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 650px;
        margin: 0 auto;
        text-align: center;
    }

    
    .form-horizontal label.control-label {
        font-weight: bold;
    }

   
    .form-control {
        width: 100%;
        padding: 8px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        margin-bottom: 10px;
    }

    
    .btn-mbr {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        text-align: center;
        cursor: pointer;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: #fff;
        transition: background-color 0.3s;
    }

        .btn-mbr:hover {
            background-color: #0056b3;
        }

    
    .back-link {
        display: inline-block;
        margin-top: 20px;
        font-size: 16px;
        color: #007bff;
        text-decoration: none;
        transition: color 0.3s;
    }

        .back-link:hover {
            color: #0056b3;
        }

</style>

<div class="container" style="margin-top:85px;">

    @using (Html.BeginForm())
    {
        <div class="form-wrapper">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Member</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", type="date" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ministry, "Ministry", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="d-flex justify-content-center">
                        @Html.DropDownList("Ministry", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Ministry, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 d-flex justify-content-center">
                        <input type="submit" value="Create" class="btn btn-default btn-mbr" />
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", new { @class= "back-link" })
    </div>
</div>
